# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
run_app(options = opt)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
gc()
# Set options here
setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
?shinyjs::addCssClass
?shinyjs::inlineCSS
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
library("shiny")
library("shinyWidgets")
ui <- fluidPage(
checkboxGroupButtons(
inputId = "somevalue",
choices = c("A", "B", "C"),
label = "My label"
),
verbatimTextOutput(outputId = "res"),
actionButton(inputId = "updatechoices", label = "Random choices"),
pickerInput(
inputId = "updateselected",
label = "Update selected:",
choices = c("A", "B", "C"),
multiple = TRUE
),
actionButton(inputId = "clear", label = "Clear selected"),
textInput(inputId = "updatelabel", label = "Update label")
)
server <- function(input, output, session) {
output$res <- renderPrint({
input$somevalue
})
observeEvent(input$updatechoices, {
newchoices <- sample(letters, sample(2:6))
updateCheckboxGroupButtons(
session = session,
inputId = "somevalue",
choices = newchoices
)
updatePickerInput(
session = session,
inputId = "updateselected",
choices = newchoices
)
})
observeEvent(input$updateselected, {
updateCheckboxGroupButtons(
session = session,
inputId = "somevalue",
selected = input$updateselected
)
}, ignoreNULL = TRUE, ignoreInit = TRUE)
observeEvent(input$clear, {
updateCheckboxGroupButtons(
session = session,
inputId = "somevalue",
selected = character(0)
)
})
observeEvent(input$updatelabel, {
updateCheckboxGroupButtons(
session = session,
inputId = "somevalue",
label = input$updatelabel
)
}, ignoreInit = TRUE)
}
shinyApp(ui = ui, server = server)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
# Set options here
#setwd("/mnt/d/Repository_ubuntu/Housekeeping/HRT_Atlas/hrt.v1.1")
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
#options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application # To be redefined before deployment
opt = list(
host = "0.0.0.0",
port = 1985
)
run_app(options = opt)
run_app(options = opt)
