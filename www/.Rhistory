rownames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=rownames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
datatable(tdata, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
popify(actionLink(inputId=paste("t_",1,sep="")
)
, label=rownames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL)
rownames(tdata)[1] <- as.character(popify(actionLink(inputId=paste("t_",1,sep=""), label=rownames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[1]
shinyApp(ui = ui, server = server)
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
colnames(tdata)[1] <- as.character(popify(actionLink(inputId=paste("t_",1,sep=""), label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
colnames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=colnames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
colnames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=colnames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
datatable(tdata, container=header, rownames=TRUE, selection='none', escape=FALSE)
})
}
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
colnames(tdata)[1] <- as.character(popify(actionLink(inputId=paste("t_",1,sep=""), label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
colnames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=colnames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
colnames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=colnames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
datatable(tdata, container=header, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
colnames(tdata)[1] <- as.character(popify(actionLink(inputId=paste("t_",1,sep=""), label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel('All you want to know about Titanic'),
fluidRow(
bsButton('tbutton','Lift Titanic'),
br(),
bsTooltip('tbutton', 'This button will inflate a balloon'),
width=2),
mainPanel(dataTableOutput('titanic')
)
)
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
colnames(tdata)[1] <- as.character(popify(actionLink(inputId=paste("t_",1,sep=""), label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=rownames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=rownames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
datatable(tdata, container=header, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
colnames(tdata)[1] <- as.character(popify(actionLink(inputId=paste("t_",1,sep=""), label=rownames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=rownames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=rownames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
datatable(tdata, container=header, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
colnames(tdata)[,1] <- as.character(popify(actionLink(inputId=paste("t_",1,sep=""), label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=rownames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=rownames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
datatable(tdata, container=header, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
colnames(tdata)[1] <- as.character(popify(actionLink(inputId=paste("t_",1,sep=""), label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=rownames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=rownames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
datatable(tdata, container=header, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
colnames(tdata)[1] <- as.character(popify(actionLink(inputId=paste("t_",1,sep=""), label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=rownames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=rownames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
datatable(tdata, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
colnames(tdata)[1] <- as.character(popify(actionLink(inputId="t_1", label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=rownames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=rownames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
datatable(tdata, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
library(shinyBS)
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shinyApp(ui = ui, server = server)
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
#https://community.rstudio.com/t/popup-message-box-in-shiny-datatables-for-row-names/12820/4
colnames(tdata)[1] <- as.character(popify(actionLink(inputId="t_1", label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=rownames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=rownames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
DT::datatable(tdata, container = header, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
tdata <- as.data.frame(Titanic)
tdata <- cbind(tdata,tdata)
output$titanic <- DT::renderDataTable({
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
header <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 1, 'PassengerID'),
th(colspan = 6, 'Titanic1'),
th(colspan = 6, 'Titanic2')),
tr(lapply(c(" ", rep(colnames(as.data.frame(Titanic)), 2)), th))
)
)
)
#https://community.rstudio.com/t/popup-message-box-in-shiny-datatables-for-row-names/12820/4
colnames(tdata)[1] <- as.character(popify(actionLink(inputId="t_1", label=colnames(tdata)[1]), title=paste("message1"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[2] <- as.character(popify(actionLink(inputId=paste("t_",2,sep=""), label=rownames(tdata)[2]), title=paste("message2"), placement = "bottom", trigger = "hover", options = NULL))
rownames(tdata)[3] <- as.character(popify(actionLink(inputId=paste("t_",3,sep=""), label=rownames(tdata)[3]), title=paste("message3"), placement = "bottom", trigger = "hover", options = NULL))
DT::datatable(tdata, rownames=TRUE, selection='none', escape=FALSE)
})
}
shinyApp(ui = ui, server = server)
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shinyApp(ui = ui, server = server)
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
library(biomaRt)
ensembl_hs <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")
ensembl_hs <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")
library(biomaRt)
ensembl_hs <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")
View(Housekeeping_TranscriptFiltered)
Genes<-getBM(attributes=c('hgnc_symbol', 'NCBI gene ID'),
filters = 'hgnc_symbol',
values = "ACTB",
mart = ensembl_hs)
Genes<-getBM(attributes=c('hgnc_symbol', 'entrezgene'),
filters = 'hgnc_symbol',
values = "ACTB",
mart = ensembl_hs)
View(Genes)
Genes<-getBM(attributes=c('hgnc_symbol', 'entrezgene'),
filters = 'hgnc_symbol',
values = Housekeeping_TranscriptFiltered$`Gene symbol`,
mart = ensembl_hs)
View(Genes)
length(unique(Housekeeping_TranscriptFiltered$`Gene symbol`))
length(unique(Genes$hgnc_symbol))
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
paste0("abc",div(HTML('<a id="inf">RPKM</a>')))
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
paste0("abc",div(HTML('<a id='"'inf'"'>RPKM</a>')))
paste0("abc","div(HTML('<a id="","inf">RPKM</a>'))")
paste0("abc",div(HTML('<a id="inf">RPKM</a>')))
paste0("abc", "<div><a id="inf">RPKM</a></div>")
paste0("abc", "<div><a id='inf'>RPKM</a></div>")
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
paste0("abc", "<a href='"'www.''google.com'"' id='inf'>RPKM</a>")
paste0("abc", "<a href='www.google.com' id='inf'>RPKM</a>")
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
paste0("abc", "<a href='www.google.com' 'target="_blank"'>RPKM</a>")
paste0("abc", "<a href='www.google.com'", " ", "'target="_blank"'>RPKM</a>")
paste0('<a href=https://www.genecards.org/cgi-bin/carddisp.pl?gene=',hk$'Gene symbol', ' ' , 'target="_blank"')
paste0('<a href=https://www.genecards.org/cgi-bin/carddisp.pl?gene=', ' ' , 'target="_blank"')
paste0("abc", "<div><a id='inf'>RPKM</a></div>")
paste0("abc", "<a href='www.google.com'", " ", "'target='_blank''>RPKM</a>")
paste0("abc", "<a href='www.google.com'", " ", "target='_blank'>RPKM</a>")
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
sort(tab_echant$Type)
as.character(sort(tab_echant$Type))
as.character(sort.int(tab_echant$Type))
sort(c("ga", "fs", "as"))
tab_echant$Type
unlist(tab_echant$Type)
as.character(tab_echant$Type)
sort(as.character(tab_echant$Type))
as.character(tab_echant$Type)
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript')
version
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
load("/home/bidossessi/Desktop/Ubuntu/RefTranscriptDb/Housekeeping_genes_Repository/Code_data_HK_Gtex/Results/Housekeeping/Adipose_Subcutaneous_expr_Housekeeping.RData")
View(Adipose_Subcutaneous_expr_Housekeeping)
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
shiny::runApp('Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
load("/home/bidossessi/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp/External/Data/Housekeeping_Genes.RData")
length(unique(HK_geneAtualizadoRef))
length(unique(HK_geneAtualizadoRef$Gene.name))
length(unique(Housekeeping_TranscriptFiltered$Gene.name))
length(unique(Housekeeping_TranscriptFiltered$Gene_symbol))
getwd()
setwd("~/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp/www")
Housekeeping_Genes <- HK_geneAtualizadoRef
save(Housekeeping_Genes, file = "Housekeeping_Genes.RData")
write.csv(Housekeeping_Genes, file = "Housekeeping_Genes.csv", row.names = F)
View(Housekeeping_Genes)
Housekeeping_Genes <- HK_geneAtualizadoRef[,-4]
save(Housekeeping_Genes, file = "Housekeeping_Genes.RData")
write.csv(Housekeeping_Genes, file = "Housekeeping_Genes.csv", row.names = F)
runApp('~/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
load("/home/bidossessi/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/HK_mouse_ensemDef.RData")
View(HK_mouse_ensemDef)
View(Housekeeping_TranscriptFiltered)
Housekeeping_TranscriptsMouse <- HK_mouse_ensemDef[,-c(2,3)]
View(Housekeeping_TranscriptsMouse)
colnames(Housekeeping_TranscriptsMouse) <- c("Ensembl ID", "Genes", "Transcript Start", "Transcript End", "Chromosome", "CCDS.ID", "RefSeq")
write.csv(Housekeeping_TranscriptsMouse, file = "Housekeeping_TranscriptsMouse.csv", row.names = F)
save(Housekeeping_TranscriptsMouse, file = "Housekeeping_TranscriptsMouse.RData")
runApp('~/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
conrpkmHs <- dbConnect(RSQLite::SQLite(), "/home/bidossessi/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/db/HK_RPKM.sqlite")
essai <- data.frame(tbl(conrpkmHs, "HK_RPKM1"))[,c(1,100)]
View(essai)
runApp('~/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
runApp('~/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
runApp('~/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
View(essai)
runApp('~/Desktop/Ubuntu/RefTranscriptDb/HK Transcript_sqlite/Housekeepingapp')
View(Mouse_HK_genes)
Mouse_HK_genes=unique(Mouse_HK_genes)
length(unique(Mouse_HK_genes$`Ensembl ID`))
write.csv(Mouse_HK_genes, file = "Housekeeping_GenesMouse.csv", row.names = F)
load("/home/bidossessi/repository/housekeepingAtlas/www/MostStableMouse.RData")
write.csv(otherTransMouse, file = "MostStable_Mouse.csv", row.names = F)
View(Housekeeping_TranscriptFiltered)
load("/home/bidossessi/repository/housekeepingAtlas/www/Housekeeping_GenesHuman.RData")
length(setdiff(unique(Mouse_HK_genes$`Ensembl ID`), unique(Housekeeping_Genes$Ensembl)))
View(Mouse_HK_genes)
View(Housekeeping_Genes)
rm(Housekeeping_Genes)
load("/home/bidossessi/repository/housekeepingAtlas/www/Housekeeping_TranscriptsMouse.RData")
length(setdiff(unique(Mouse_HK_genes$`Ensembl ID`), unique(Housekeeping_TranscriptsMouse$`Ensembl ID`)))
length(setdiff(unique(Housekeeping_TranscriptsMouse$`Ensembl ID`, unique(Mouse_HK_genes$`Ensembl ID`))))
length(setdiff(unique(Housekeeping_TranscriptsMouse$`Ensembl ID`), unique(Mouse_HK_genes$`Ensembl ID`)))
load("/home/bidossessi/repository/housekeepingAtlas/www/Housekeeping_GenesHuman.RData")
length(setdiff(unique(Housekeeping_Genes$Ensembl), unique(Housekeeping_TranscriptFiltered$Ensembl)))
length(setdiff(unique(Housekeeping_TranscriptFiltered$Ensembl), unique(Housekeeping_Genes$Ensembl)))
2833+128
length(setdiff(unique(Housekeeping_TranscriptFiltered$Gene_symbol), unique(Housekeeping_Genes$Gene.name)))
length(setdiff(unique(Housekeeping_TranscriptFiltered$Ensembl), unique(Housekeeping_Genes$Ensembl)))
length(setdiff(unique(Housekeeping_Genes$Gene.name), unique(Housekeeping_TranscriptFiltered$Gene_symbol)))
2286-128
shiny::runApp('~/repository/housekeepingAtlas')
View(Housekeeping_TranscriptFiltered)
Housekeeping_TranscriptFiltered2 <- merge(Housekeeping_TranscriptFiltered, data.frame(Ensembl=Housekeeping_Genes$Ensembl), by="Ensembl", all.x = T)
Housekeeping_TranscriptFiltered2 <- na.omit(merge(Housekeeping_TranscriptFiltered, data.frame(Ensembl=Housekeeping_Genes$Ensembl), by="Ensembl", all.x = T))
Housekeeping_TranscriptFiltered2 <- na.omit(merge(Housekeeping_TranscriptFiltered, data.frame(Ensembl=Housekeeping_Genes$Ensembl), by="Ensembl", all.y = T))
View(Housekeeping_TranscriptFiltered2)
Housekeeping_TranscriptFiltered <- Housekeeping_TranscriptFiltered2
getwd()
save(Housekeeping_TranscriptFiltered, file = "Housekeeping_TranscriptsHuman.RData")
load("/home/bidossessi/repository/housekeepingAtlas/External/Data/Housekeeping_TranscriptFiltered.RData")
